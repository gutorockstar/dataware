<?php

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of HomeController
 *
 * @author augusto
 */

// namespace de localizacao HomeController.php
namespace Tecnon\Controller;
 
use Zend\Mvc\Controller\AbstractActionController,
    Zend\View\Model\ViewModel,
    SynergyDataGrid\Grid\JqGridFactory;

class TecnonController extends AbstractActionController
{
    /**
     * Recebe o formulário de login.
     * 
     * @var Form
     */
    protected $form;
    
    /**
     * Recebe EntityManager do Doctrine.
     * 
     * @var EntityManegr
     */
    protected $entityManager;

    /**
     * Recebe a authenticação para a seção do usuário.
     * 
     * @var AuthStorageModel
     */
    protected $storage;
    
    /**
     * Recebe o serviço de acesso a base.
     * 
     * @var AuthService.
     */
    protected $authService;
    
    /**
     * action index
     * 
     * @return \Zend\View\Model\ViewModel
     */
    public function indexAction()
    {
        if (! $this->getServiceLocator()->get('AuthService')->hasIdentity())
        {
            return $this->redirect()->toRoute('login');
        }
        
        return new ViewModel();
    }
    
    /**
     * Retorna uma Entidade de trabalho para doctrine.
     * 
     * @return EntityManager.
     */
    public function getEntityManager()
    {
        $this->entityManager = $this->getServiceLocator()
                                    ->get('Doctrine\ORM\EntityManager');
        
        return $this->entityManager;
    }
    
    /**
     * Retorna o serviço de acesso a base.
     * 
     * @return AuthService
     */
    public function getAuthService()
    {
        if (! $this->authService) 
        {
            $this->authService = $this->getServiceLocator()
                                      ->get('AuthService');
        }
        
        return $this->authService;
    }
    
    /**
     * Retorna a authenticação para a seção do usuário.
     * 
     * @return AuthStorageModel
     */
    public function getSessionStorage()
    {
        if (! $this->storage) 
        {
            $this->storage = $this->getServiceLocator()
                                  ->get('Admin\Entity\AdmLogin');
        }
        
        return $this->storage;
    }
    
    /**
     * Retorna o formulário de login.
     * 
     * @param String $formNameSpace
     * @return Form
     */
    public function getForm($formNameSpace)
    {
        if ( !$this->form ) 
        {
            $this->form = new $formNameSpace();
        }
        
        return $this->form;
    }
  
    public function addAction() {}

    public function editAction() {}

    public function deleteAction() {}
}

?>
